<launch>
  <!-- Head Camera and Projector triggers -->
  <include file="$(find pr2_bringup)/config/pr2_camera_projector_trigger_controllers.xml" />
  <node name="spawner_camera_synchronizer" pkg="pr2_controller_manager" type="spawner" args="projector_trigger projector_controller head_camera_trigger prosilica_inhibit_projector_controller" />


  <!-- Spawns the synchronizer -->
  <node type="pr2_camera_synchronizer_no_forearm" name="camera_synchronizer_node" pkg="pr2_camera_synchronizer">
  </node>

  <!-- Turn on projector -->
  <include file="$(find pr2_camera_synchronizer)/projector_on.launch" />
  
  <!-- Need to publish joint states to avoid confusion -->
  
  <!-- Spawns the wide cameras -->
  <node name="wide_stereo_left" pkg="wge100_camera" type="wge100_camera_node">
    <param name="ext_trig" type="bool" value="True" />
    <param name="camera_url" type="str" value="name://wide_stereo_l#eth1@10.0.3.241" />
    <remap from="camera" to="wide_stereo/left" />
    <remap from="camera_alternate" to="wide_stereo/left" />
    <param name="trig_timestamp_topic" type="string" value="not_set" />
  </node>

  <node name="wide_stereo_right" pkg="wge100_camera" type="wge100_camera_node">
    <param name="ext_trig" type="bool" value="True" />
    <param name="camera_url" type="str" value="name://wide_stereo_r#eth1@10.0.3.242"/>
    <remap from="camera" to="wide_stereo/right" />
    <remap from="camera_alternate" to="wide_stereo/right" />
    <param name="trig_timestamp_topic" type="string" value="not_set" />
  </node>
  
  <node name="wide_stereo_both" pkg="wge100_camera" type="wge100_multi_configurator" respawn="true">
    <param name="camera_nodes" type="str" value="wide_stereo_left wide_stereo_right" />
    <param name="width" type="int" value="640" />  
    <param name="height" type="int" value="480" />  
    <param name="imager_rate" type="double" value="25" />
  
    <param name="trig_timestamp_topic" type="str" value="head_camera_trigger/trigger" />
    <param name="frame_id" type="str" value="wide_stereo_optical_frame" />
    <param name="first_packet_offset" type="double" value="0.0025" />
    <param name="ext_trig" type="bool" value="True" />
    <param name="rotate_180" type="bool" value="True" />
  </node>
  
  <!-- Spawns the narrow cameras -->
  <node name="narrow_stereo_right" pkg="wge100_camera" type="wge100_camera_node">
    <param name="camera_url" type="str" value="name://narrow_stereo_r#eth1@10.0.3.243"/>
    <remap from="camera" to="narrow_stereo/right" />
    <remap from="camera_alternate" to="narrow_stereo_textured/right" />
    <param name="ext_trig" type="bool" value="True" />
    <param name="trig_timestamp_topic" type="string" value="not_set" />
  </node>

  <node name="narrow_stereo_left" pkg="wge100_camera" type="wge100_camera_node">
    <param name="camera_url" type="str" value="name://narrow_stereo_l#eth1@10.0.3.244"/>
    <remap from="camera" to="narrow_stereo/left" />
    <remap from="camera_alternate" to="narrow_stereo_textured/left" />
    <param name="ext_trig" type="bool" value="True" />
    <param name="trig_timestamp_topic" type="string" value="not_set" />
  </node>

  <node name="narrow_stereo_both" pkg="wge100_camera" type="wge100_multi_configurator" respawn="true">
    <param name="camera_nodes" type="str" value="narrow_stereo_left narrow_stereo_right" />
    <param name="width" type="int" value="640" />  
    <param name="height" type="int" value="480" />  
    <param name="imager_rate" type="double" value="25" />

    <param name="trig_timestamp_topic" type="str" value="head_camera_trigger/trigger" />
    <param name="frame_id" type="str" value="narrow_stereo_optical_frame" />
    <param name="first_packet_offset" type="double" value="0.0025" />

    <param name="ext_trig" type="bool" value="True" />
  </node>

  <!-- Check if projector on (user). Replaces visualizer -->
  <node pkg="qualification" type="check_projector_on.py" name="check_projector_on" />

  <group ns="test_controller" clear_params="true">
    <param name="type" type="string" value="CheckoutController" />
    <param name="timeout" type="double" value="30.0" />
  </group>
  
  <node pkg="pr2_controller_manager" type="spawner"
        name="spawner" args="test_controller" />

  
  <node pkg="qualification" type="robot_checkout.py" name="checkout" >
    <rosparam command="load" file="$(find qualification)/tests/head_test/head_projector_check_data.yaml" />
  </node>
</launch>
