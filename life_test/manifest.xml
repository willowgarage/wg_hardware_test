<package>
  <description brief="Runs life/burn-in tests on PR2 components and robots">
    This package contains the scripts needed to run burn in and life tests on PR2 components.

    Use Test Manager to run tests:
    roscd life_test
    ./test_manager.py
  </description>
  <author>Kevin Watts</author>
  <review status="na" notes=""/>
  <license>BSD</license>
  <url>http://www.ros.org/wiki/life_test</url>
  <depend package="pr2_component_descriptions" />
  <depend package="pr2_controller_configuration" />
  <depend package="pr2_etherCAT"/>
  <depend package="pr2_power_board"/>
  <depend package="pr2_mechanism_controllers"/>
  <depend package="robot_mechanism_controllers" />
  <depend package="pr2_controller_manager" />
  <depend package="pr2_bringup" />
  <depend package="runtime_monitor" />
  <depend package="wg_invent_client" />
  <depend package="diagnostic_msgs" />
  <depend package="roslaunch_caller" />
  <depend package="pr2_mechanism_msgs" />
  <depend package="geometry_msgs" />
  <depend package="robot_state_publisher" />
  <depend package="wge100_camera" />
  <depend package="rospy" />
  <depend package="sensor_msgs" />
  <depend package="std_srvs" />
  <depend package="hokuyo_node" />
  <depend package="joint_qualification_controllers" />
  <depend package="ectools" />
  <depend package="pr2_camera_synchronizer" />
  <depend package="pr2_drive_life_test" />
  <depend package="robot_monitor" />
  <depend package="pr2_teleop" />
  <depend package="joy" />
  <depend package="pr2_hardware_test_monitor" />
  <depend package="pr2_self_test_msgs" />
  <depend package="rosbag" />
  <depend package="pr2_transmission_check" />
  
  <!-- Unit test -->
  <depend package="rostopic" />

  <!-- Arm planning stuff -->
  <depend package="planning_environment" />
  <depend package="collision_free_arm_trajectory_controller" />
  <depend package="trajectory_filter_server" />
  <depend package="pr2_arm_navigation_actions" />
  <depend package="joint_trajectory_action" />
  <depend package="geometric_shapes_msgs" />

  <export>
    <cpp cflags="-I${prefix}/msg/cpp" />
  </export>
  <rosdep name="wxwidgets"/>
  <rosdep name="wxpython"/>
  <platform os="ubuntu" version="9.04"/>
  <platform os="ubuntu" version="9.10"/>
  <platform os="ubuntu" version="10.04"/>
</package>
