<launch>
  <!-- send parameters for collision checking for PR2; this includes parameters for the self filter -->
  <rosparam command="load" ns="robot_description_collision" file="$(find life_test)/shoulder_ua_test/config/collision_checks_both_arms.yaml" />
  
  <!-- send parameters needed for motion planning -->
  <rosparam command="load" ns="robot_description_planning" file="$(find life_test)/shoulder_ua_test/config/planning_groups.yaml" />
  
  <node pkg="planning_environment" type="environment_server" name="environment_server_right_arm">
    <remap from="collision_map" to="collision_map_occ" />
    <remap from="collision_map_update" to="collision_map_occ_update" />
    <param name="group" type="string" value="right_arm" />
    <param name="allow_valid_collisions" type="bool" value="false" />
    <param name="collision_map_safety_timeout" type="double" value="100000.0" />
    <param name="joint_states_safety_timeout" type="double" value="1.0" />
    <param name="bounding_planes" type="string" value="0 0 1 -0.01" />
    <param name="use_collision_map" type="bool" value="false" />
  </node>

  <!-- load filter -->
  <node pkg="trajectory_filter_server" name="trajectory_filter" type="trajectory_filter_server" >
    <rosparam command="load" file="$(find pr2_arm_navigation_actions)/config/collision_free_control_filter_config.yaml"/>
    <rosparam command="load" file="$(find life_test)/shoulder_ua_test/config/joint_limits.yaml"/>
  </node>

  <node pkg="collision_free_arm_trajectory_controller" name="collision_free_arm_trajectory_controller" type="collision_free_arm_trajectory_controller" >
   <param name="traj_action_name" type="string" value="r_arm_controller/joint_trajectory_action" />
   <param name="group_name" type="string" value="right_arm" />
   <remap from="filter_trajectory" to="trajectory_filter/filter_trajectory" />  
   <remap from="get_robot_state" to="environment_server_right_arm/get_robot_state" />
   <remap from="get_execution_safety" to="environment_server_right_arm/get_trajectory_validity" />
  </node>

  <rosparam command="load" file="$(find life_test)/shoulder_ua_test/pr2_shoulder_ua_controller.yaml" />

  <!-- Default right arm controller -->
  <node name="default_controllers_spawner"
        pkg="pr2_controller_manager" type="spawner" output="screen"
        args="--wait-for=calibrated r_arm_controller" />

  <!-- Nodes on top of the controllers -->
  <group ns="r_arm_controller">
    <node name="joint_trajectory_action_node"  
          pkg="joint_trajectory_action" type="joint_trajectory_action" />
  </group>

  <!-- Commands arm to random positions -->
  <node pkg="life_test" type="collision_free_arm_cmder.py" name="arm_cmder_no_collision" />

  <!-- FA roll cmder -->
  <rosparam command="load"
            file="$(find pr2_controller_configuration)/pr2_joint_effort_controllers.yaml" />
  <node pkg="pr2_controller_manager" type="spawner"
        args="--wait-for=calibrated r_forearm_roll_effort_controller"
        name="fa_roll_spawner)" />
  <node pkg="life_test" name="upperarm_cmder" type="upperarm_cmder.py" />
</launch>
