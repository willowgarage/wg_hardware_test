<launch>
  <!-- send parameters for collision checking for PR2; this includes parameters for the self filter -->
  <rosparam command="load" ns="robot_description_collision" file="$(find life_test)/shoulder_ua_test/config/collision_checks_both_arms.yaml" />
  
  <!-- send parameters needed for motion planning -->
  <rosparam command="load" ns="robot_description_planning" file="$(find life_test)/shoulder_ua_test/config/left_arm_planning_description.yaml" />
  
  <node pkg="planning_environment" type="environment_server" name="environment_server_left_arm">
    <param name="use_monitor" type="bool" value="true" />
    <param name="use_collision_map" type="bool" value="false" />
  </node>

  <!-- load filter -->
  <node pkg="trajectory_filter_server" name="trajectory_filter" type="trajectory_filter_server" >
    <rosparam command="load" file="$(find life_test)/shoulder_ua_test/config/filters.yaml"/>
    <rosparam command="load" file="$(find life_test)/shoulder_ua_test/config/joint_limits.yaml"/>
  </node>

  <node pkg="collision_free_arm_trajectory_controller" name="collision_free_arm_trajectory_controller" type="collision_free_arm_trajectory_controller" >
   <param name="group_name" type="string" value="left_arm" />
   <remap from="/joint_trajectory_action" to="r_arm_controller/joint_trajectory_action" />
   <remap from="filter_trajectory" to="trajectory_filter/filter_trajectory_with_constraints" />  
  </node>

  <rosparam command="load" file="$(find life_test)/shoulder_ua_test/pr2_shoulder_ua_controller.yaml" />

  <!-- Default left arm controller -->
  <node name="default_controllers_spawner"
        pkg="pr2_controller_manager" type="spawner" output="screen"
        args="--wait-for=calibrated l_arm_controller" />

  <!-- Nodes on top of the controllers -->
  <group ns="l_arm_controller">
    <node name="joint_trajectory_action_node"  
          pkg="joint_trajectory_action" type="joint_trajectory_action" />
  </group>


</launch>
